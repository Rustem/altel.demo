{
    "contents" : "#BaseStationID,\n#City,\n#Latitude,\n#Longitude,\n#Status,\n#ConnAbons,\n#Technology\n#Manufacturer\n#Model\nlibrary(uuid)\npj <- function(...) { return(paste(..., sep='/')) }\ndata_dir <- pj(getwd(), 'data')\nraw_csv <- read.csv(pj(data_dir, 'cities.csv'))\ncities <- raw_csv %>%\n  select(\n    city = RegionName,\n    lat = Latitude,\n    lon = Longitude\n  )\ncities <- mutate(cities, zoom=8)\n\nSTATUSES <- 0:100\nTECH <- c('2g', '3g', 'lte')\nMODELS <- c('X-100', 'Y-200', 'X-250', 'Y-300')\nMANUFACTURERS <- 'HUAWEI'\n\nbs <- data.frame(\n  BaseStationID=character(),\n  City=character(),\n  Latitude=double(),\n  Longitude=double(),\n  Status=character(),\n  ConnAbons=integer(),\n  Technology=character(),\n  Manufactuer=character(),\n  Model=character())\n\nfor(from in seq(1, nrow(cities))) {\n  curCity <- cities[from,]\n  if(curCity$city == 'Kazakhstan')\n    next\n  curBSLats <- replicate(5, jitter(curCity$lat, factor=0.6))\n  curBSLons <- replicate(5, jitter(curCity$lon, factor=0.6))\n  for(i in seq(1, length(curBSLats))) {\n    curLat <- curBSLats[i]\n    curLon <- curBSLons[i]\n    sts <- sample_n(data.frame(status=STATUSES), 1, weight=c(rep(1, 70), seq(1, 31)))$status\n    if(sts == 0) {\n      sts = 'off_air'\n    }\n    if(sts > 80) {\n      sts = 'ok'\n    }\n    curBS <- data.frame(\n      BaseStationId=UUIDgenerate(),\n      City=curCity$city,\n      Latitude=curLat,\n      Longitude=curLon,\n      Status=as.character(sts),\n      ConnAbons=sample(5000:10000, 1),\n      Technology=sample(TECH, 1),\n      Manufacturer=MANUFACTURERS,\n      Model=sample(MODELS, 1)\n    )\n    bs <- rbind(bs, curBS)\n  }\n}\nwrite.csv(bs, pj(data_dir, 'base_stations_2.csv'), quote=FALSE, row.names=FALSE)\n\nSUCCESS_CALL_RNG <- data.frame(n=seq(85, 100, by=0.5))\nFAIL_RATE_RNG <- data.frame(n=seq(0, 5, by=0.12))\nCELL_AVAIL_RNG <- data.frame(n=seq(85, 100, by=0.5))\nMAX_ACTIVE_ABON_RNG <- data.frame(n=seq(50, 10000, by=25))\nOVERLOAD_RATE_RNG <- data.frame(n=seq(0, 10, by=0.18))\nYEAR = 2015\nMONTHS = 1:2\nDAYS = 1:10\n\nkpi2g <- data.frame(\n  BaseStationId=character(),\n  year=integer(),\n  month=integer(),\n  day=integer(),\n  success_call_rate=double(),\n  fail_rate=double(),\n  cell_avail=double(),\n  max_active_abon=integer(),\n  overload_rate=double()\n)\nkpi3g <- data.frame(\n  BaseStationId=character(),\n  year=integer(),\n  month=integer(),\n  day=integer(),\n  success_call_rate=double(),\n  fail_rate=double(),\n  cell_avail=double(),\n  max_active_abon=integer(),\n  overload_rate=double()\n)\nkpilte <- data.frame(\n  BaseStationId=character(),\n  year=integer(),\n  month=integer(),\n  day=integer(),\n  success_call_rate=double(),\n  fail_rate=double(),\n  cell_avail=double(),\n  max_active_abon=integer(),\n  overload_rate=double()\n)\n\nrawbsIds <- distinct(select(bs, BaseStationId), BaseStationId)$BaseStationId\nprint(length(rawbsIds))\nfor(from in seq(1, length(rawbsIds))) {\n  curBSId <- rawbsIds[from]\n  for(mon in MONTHS) {\n    for(d in DAYS) {\n      kpi2g <- rbind(kpi2g, data.frame(\n        BaseStationId=curBSId,\n        year=YEAR,\n        month=mon,\n        day=d,\n        success_call_rate=sample_n(SUCCESS_CALL_RNG, 1, weight = 1:nrow(SUCCESS_CALL_RNG))$n,\n        fail_rate=sample_n(FAIL_RATE_RNG, 1, weight = 1:nrow(FAIL_RATE_RNG))$n,\n        cell_avail=sample_n(CELL_AVAIL_RNG, 1, weight = 1:nrow(CELL_AVAIL_RNG))$n,\n        max_active_abon=sample_n(MAX_ACTIVE_ABON_RNG, 1, weight = 1:nrow(MAX_ACTIVE_ABON_RNG))$n,\n        overload_rate=sample_n(OVERLOAD_RATE_RNG, 1, weight = 1:nrow(OVERLOAD_RATE_RNG))$n\n      ))\n      kpi3g <- rbind(kpi3g, data.frame(\n        BaseStationId=curBSId,\n        year=YEAR,\n        month=mon,\n        day=d,\n        success_call_rate=sample_n(SUCCESS_CALL_RNG, 1, weight = 1:nrow(SUCCESS_CALL_RNG))$n,\n        fail_rate=sample_n(FAIL_RATE_RNG, 1, weight = 1:nrow(FAIL_RATE_RNG))$n,\n        cell_avail=sample_n(CELL_AVAIL_RNG, 1, weight = 1:nrow(CELL_AVAIL_RNG))$n,\n        max_active_abon=sample_n(MAX_ACTIVE_ABON_RNG, 1, weight = 1:nrow(MAX_ACTIVE_ABON_RNG))$n,\n        overload_rate=sample_n(OVERLOAD_RATE_RNG, 1, weight = 1:nrow(OVERLOAD_RATE_RNG))$n\n      ))\n      kpilte <- rbind(kpilte, data.frame(\n        BaseStationId=curBSId,\n        year=YEAR,\n        month=mon,\n        day=d,\n        success_call_rate=sample_n(SUCCESS_CALL_RNG, 1, weight = 1:nrow(SUCCESS_CALL_RNG))$n,\n        fail_rate=sample_n(FAIL_RATE_RNG, 1, weight = 1:nrow(FAIL_RATE_RNG))$n,\n        cell_avail=sample_n(CELL_AVAIL_RNG, 1, weight = 1:nrow(CELL_AVAIL_RNG))$n,\n        max_active_abon=sample_n(MAX_ACTIVE_ABON_RNG, 1, weight = 1:nrow(MAX_ACTIVE_ABON_RNG))$n,\n        overload_rate=sample_n(OVERLOAD_RATE_RNG, 1, weight = 1:nrow(OVERLOAD_RATE_RNG))$n\n      ))\n    }\n  }\n}\n\nwrite.csv(kpi2g, pj(data_dir, 'kpi_2g.csv'), quote=FALSE, row.names=FALSE)\nwrite.csv(kpi3g, pj(data_dir, 'kpi_3g.csv'), quote=FALSE, row.names=FALSE)\nwrite.csv(kpilte, pj(data_dir, 'kpi_lte.csv'), quote=FALSE, row.names=FALSE)\n\n# replicate(100, jitter(c(42.5555, 72.34), factor=0.6))",
    "created" : 1430218712879.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4273827608",
    "id" : "55D56D5B",
    "lastKnownWriteTime" : 1430319984,
    "path" : "~/work/projects/r/shiny/altel.demo/utils.R",
    "project_path" : "utils.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}